#!/usr/bin/env elixir

require Logger

defmodule Split do
  def run(args) do
    args
    |> parse_args()
    |> log_args()
    |> split()
  end

  defp log_args(args = {input, output}) do
    Logger.info("input => #{input}")
    Logger.info("output => #{output}")

    args
  end

  defp parse_args([input_path | [output_path | _]]), do: {input_path, output_path}
  defp parse_args(_), do: raise(ArgumentError, "Incorrect number of args supplied: #{System.argv()}")

  defp split({input, output}) do
    input
    |> File.stream!()
    |> Stream.drop_while(fn line -> !(line =~ ~R/^#{1,6}\s+release\s+note(s)?\s+$/i) end)
    |> Stream.drop(1)
    |> Stream.drop_while(fn line -> line =~ ~R/^$/ end)
    |> Stream.into(File.stream!(output))
    |> Stream.run()
  end
end

Split.run(System.argv())
